set nocompatible              " be iMproved, required
filetype off                  " required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Vundles!
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'LaTeX-Box-Team/LaTeX-Box'
Plugin 'Lokaltog/vim-powerline'
Plugin 'altercation/vim-colors-solarized'
Plugin 'scrooloose/syntastic'
Plugin 'kien/ctrlp.vim'
Plugin 'rking/ag.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'Vim-R-plugin'

call vundle#end()            " required
filetype plugin indent on    " required

set number
set vb t_vb=
set smartindent
set clipboard=unnamed        " yank and paste with the system clipboard

set ts=2 sts=2 sw=2 expandtab tw=72
if has("mac")
	set guifont=Monaco:h12
else
	set guifont=Inconsolata\ 11
endif
set laststatus=2
syntax on

set autochdir

" trying to learn hjkl...
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" I think this is better for latex
nnoremap k gk
nnoremap gk k
nnoremap j gj
nnoremap gj j

set background=light
" let g:solarized_contrast = 'low'
colorscheme solarized
" Toggle 'night mode'
call togglebg#map("<F6>")

" set powerline to display only short filenames
let g:Powerline_stl_path_style = 'filename'

" Ctrlp
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.m4a,*.pdf
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'

" Source the vimrc file after saving it
if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif

au FileType * exec("setlocal dictionary+=".$HOME."/.vim/dictionaries/".expand('<amatch>'))
set complete+=k

" Spelling only for tex files
set nospell
autocmd BufNewFile,BufRead *.tex set spell

let g:LatexBox_latexmk_options = "-pdf"
let g:LatexBox_latexmk_async = 1
nmap <buffer> <F5>  <Plug>LatexChangeEnv
vmap <buffer> <F7>  <Plug>LatexWrapSelection
let g:LatexBox_quickfix = 0
if has("mac")
	let g:LatexBox_viewer = "open"
else
	let g:LatexBox_viewer = "xdg-open"
endif
let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': [],
                           \ 'passive_filetypes': ['tex'] }

" Append modeline after last line in buffer.
" Use substitute() instead of printf() to handle '%%s' modeline in LaTeX
" files.
function! AppendModeline()
  let l:modeline = printf(" vim: set ts=%d sw=%d tw=%d %set :",
        \ &tabstop, &shiftwidth, &textwidth, &expandtab ? '' : 'no')
  let l:modeline = substitute(&commentstring, "%s", l:modeline, "")
  call append(line("$"), l:modeline)
endfunction
nnoremap <silent> <Leader>ml :call AppendModeline()<CR>

" NerdTree
map <C-n> :NERDTreeToggle<CR>

